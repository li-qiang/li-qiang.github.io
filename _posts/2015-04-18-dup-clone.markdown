---
layout: post
title: Dup and Clone
categories: ruby
tags: keng
---
#### Environment **Ruby 2.1.1**

## clone vs dup
> `clone` can copy all instance's methods, but `dup` not.
{% highlight ruby %}

module age
  def age
    p 'My age is 1'
  end
end

class Person
  def name
    p 'I am a person'
  end
end

a = Person.new.name
a.name # => I am a person
a.age # => NoMethodError: undefined method `age'

a.extend Age
a.age # => My age is 1

# clone
b = a.clone
b.name # => I am a person
b.age # => My age is 1

# dup
c = a.dup
c.name # => I am a person
c.age # => NoMethodError: undefined method `age'

{% endhighlight %}

> Array column is shared by clone and dup object

{% highlight ruby %}
class Person
  attr_reader :dogs

  def initialize
    @dogs = []
  end

  def add_dog(dog)
    @dogs << dog
  end
end

me = Person.new

me.add_dog(dog1)

me.dogs # => dog1

he = me.dup # => a new person

he.add_dog(dog2)

he.dogs # => dog1, dog2

me.dogs # => dog1, dog2

she = me.clone

she.dogs # => dog1,dog2

she.add_dog(dog3)

she.dogs # => dog1,dog2, dog3

me.dogs # => dog1,dog2,dog3

he.dogs # => dog1,dog2,dog3

{% endhighlight %}
